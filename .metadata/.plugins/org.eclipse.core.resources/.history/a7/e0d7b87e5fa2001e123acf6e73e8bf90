server:
  port: 9081
  
spring:
  datasource:
#   driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: root
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    
  application:
    name: USER-SERVICE
#   properties:
#     hibernate:
#       dialect: org.hibernate.dialect.MySQLDialect

#This will take the configuration from CONFIG-SERVER which is further configured to take configuration details 
#form GitHub repository.
  config:
    import: optional:configserver:http://localhost:9085
    
#For changing profile from GitHub repository's files accordingly like: prod, dev, default.
#  profiles:
#    active: prod
#OR
#  profiles:
#    active: dev


#This configuration will now come from GitHub config file. Repo name: micro-services-config. And configured here 
#as just above lines, starts from 'config:'.
#This configuration for registering this service for making it discoverable by Eureka Service Registry.
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:9080/eureka
      
#Actuator Configuration for Resilience4j (For Circuit breaker and rate limiter etc.)
management:
  health:
    circuitbreakers:
      enabled: true
      
  endpoints:
    web:
      exposure:
        include: health
        
  endpoint:
    health:
      show-details: always

#Resilience4j Configuration this can be done in Java classes.
resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        failure-rate-threshold: 50  #this unit is in percentage
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 6s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count-based

